#str(data_cleaned)
#Recode certain categotical variables
#For gender, we code 0 (N/A) and non-binary as other
table(data_cleaned$DQ_Gender)
data_cleaned$DQ_Gender[data_cleaned$DQ_Gender=="0" | data_cleaned$DQ_Gender=="Non binary/third gender"] <- "Other"
data_cleaned$gender.f <- factor(data_cleaned$DQ_Gender,levels=c("Female","Male","Other"), exclude = "Other")
table(data_cleaned$gender.f)
#Show the distribution of education
# table(data_cleaned$DQ_Educ)
#Divide education into no bachelor's degree, bachelor's degree, and graduate degree
data_cleaned$DQ_Educ[data_cleaned$DQ_Educ=="0"] <- "Other"
data_cleaned$DQ_Educ[data_cleaned$DQ_Educ=="High school or equivalent (e.g., GED)" |
data_cleaned$DQ_Educ=="Some college but no degree"] <- "No Bachelor's degree"
data_cleaned$DQ_Educ[data_cleaned$DQ_Educ=="Associate's degree" |
data_cleaned$DQ_Educ=="Trade, technical, or vocational training" |
data_cleaned$DQ_Educ=="Bachelor's degree"] <- "Bachelor's degree"
data_cleaned$DQ_Educ[data_cleaned$DQ_Educ=="Professional degree (JD, MD etc.)" |
data_cleaned$DQ_Educ=="Doctoral's degree" |
data_cleaned$DQ_Educ=="Master's degree"] <- "Graduate degree"
data_cleaned$education.f <- factor(data_cleaned$DQ_Educ,
levels=c("No Bachelor's degree","Bachelor's degree","Graduate degree"), exclude = "Other")
# table(data_cleaned$education.f)
#Show basic statistics about age
library(pastecs)
stat.desc(data_cleaned$DQ_Age)
#Show the distribution of age
hist(as.numeric(data_cleaned$DQ_Age), breaks=10)
#Convert age to a numeric type variable
data_cleaned$age <- as.numeric(data_cleaned$DQ_Age)
#Convert ref_id to factor
#data_cleaned$ref_id.f <- factor(data_cleaned$ref_id)
#Show the distribution of occupation
# table(data_cleaned$DQ_Occ)
data_cleaned$DQ_Occ[data_cleaned$DQ_Occ == "Computers (Hardware, Desktop Software)"|
data_cleaned$DQ_Occ == "Engineering / Architecture" |
data_cleaned$DQ_Occ == "Internet"] <- "Technical occupations"
data_cleaned$DQ_Occ[data_cleaned$DQ_Occ != "Technical occupations"] <- "Non-technical occupations"
data_cleaned$occupation.f <- factor(data_cleaned$DQ_Occ,
levels=c("Technical occupations","Non-technical occupations"))
# table(data_cleaned$occupation.f)
#phishing-related variables
data_cleaned$p_email.f <- factor(data_cleaned$p_email)
# table(data_cleaned$p_email.f)
data_cleaned$p_link.f <- factor(data_cleaned$p_link)
# table(data_cleaned$p_link.f)
#condition group variables
data_cleaned$placement.f <- factor(data_cleaned$placement,
level=c("inmail","banner","browser","no warning"))
# table(data_cleaned$placement.f)
data_cleaned$activation.f <- factor(data_cleaned$activation,
level=c("on load","on click","no warning"))
# table(data_cleaned$activation.f)
data_cleaned$forced_attention[data_cleaned$forced_attention=="neither"] <- "no"
data_cleaned$forced_attention.f <- factor(data_cleaned$forced_attention,
level=c("no","yes","no warning"))
# table(data_cleaned$forced_attention.f)
data_cleaned$condition_group.f <- factor(data_cleaned$condition_group,
levels=c(1,2,3,4,5,6,0),
labels=c("on-load, no forced","on-load, forced",
"on-click, no forced","on-click, forced",
"banner","browser","no warning"))
# table(data_cleaned$condition_group.f)
#dependent variables: click and hover action, hover time
data_cleaned$email_p_link_click[data_cleaned$email_p_link_click == "True"] <- 1
data_cleaned$email_p_link_click[data_cleaned$email_p_link_click == "False"] <- 0
data_cleaned$email_p_link_hover[data_cleaned$email_p_link_hover == "True"] <- 1
data_cleaned$email_p_link_hover[data_cleaned$email_p_link_hover == "False"] <- 0
data_cleaned$click_email_action.f <- factor(data_cleaned$email_p_link_click,
levels=c(0:1),
labels=c("no","yes"))
data_cleaned$hover_email_action.f <- factor(data_cleaned$email_p_link_hover,
levels=c(0:1),
labels=c("no","yes"))
data_cleaned$warn_p_link_click[data_cleaned$warn_p_link_click == "True"] <- 1
data_cleaned$warn_p_link_click[data_cleaned$warn_p_link_click == "False"] <- 0
data_cleaned$warn_p_link_hover[data_cleaned$warn_p_link_hover == "True"] <- 1
data_cleaned$warn_p_link_hover[data_cleaned$warn_p_link_hover == "False"] <- 0
data_cleaned$click_warning_action.f <- factor(data_cleaned$warn_p_link_click,
levels=c(0:1),
labels=c("no","yes"))
data_cleaned$hover_warning_action.f <- factor(data_cleaned$warn_p_link_hover,
levels=c(0:1),
labels=c("no","yes"))
#dependent variables: click and hover action
data_cleaned$click_action[data_cleaned$click_action == "True"] <- 1
data_cleaned$click_action[data_cleaned$click_action == "False"] <- 0
data_cleaned$hover_action[data_cleaned$hover_action == "True"] <- 1
data_cleaned$hover_action[data_cleaned$hover_action == "False"] <- 0
data_cleaned$click_action.f <- factor(data_cleaned$click_action, levels=c(0:1), labels=c("no","yes"))
data_cleaned$hover_action.f <- factor(data_cleaned$hover_action, levels=c(0:1), labels=c("no","yes"))
# Try Factoring 0 and 1 (edit: does not work)
# data_cleaned$click_action.f <- factor(data_cleaned$click_action)
# data_cleaned$hover_action.f <- factor(data_cleaned$hover_action)
#Factor random effect variables
data_cleaned$ref_id.f <- factor(data_cleaned$ref_id)
data_cleaned$username.f <- factor(data_cleaned$username)
data_cleaned$adj_link_id.f <- factor(data_cleaned$adj_link_id)
#rename time series variable
colnames(data_cleaned)[which(names(data_cleaned) == "time_series")] <- "warnings_seen"
#Only examine phish links and include non-phish ctr as additional variables in the model
library(dplyr)
data_phish_only <- data_cleaned %>%
filter(data_cleaned$p_link == "True")
# Run logistic regression on phishing links only
library(lme4)
# for click actions
# in email
# glm_click_email_phish <- glmer(click_email_action.f ~
#      (placement.f + activation.f + forced_attention.f)^2 #warning-related factors
#      + warnings_seen #number of warnings seen before and during clicking on the link
#      + benign_ctr #tendency to click on benign links
#      + cyber_quiz_score + PE_score + brand_usage # phishing-related individual characteristics
#      + gender.f + education.f + age + occupation.f #demographics
#      + (1 | ref_id.f) + (1 | username.f) + (1 | adj_link_id.f), #random effect
#      data=data_phish_only,
#      family="binomial")
# summary(glm_click_email_phish)
# #Print correlation tables
# print(glm_click_email_phish, correlation=TRUE)
# #Get confidence intervals
# se_click_email_phish <- sqrt(diag(vcov(glm_click_email_phish)))
# # table of estimates with 95% CI
# (tab_click_email_phish <- cbind(Est = fixef(glm_click_email_phish),
#               LL = fixef(glm_click_email_phish) - 1.96 * se_click_email_phish,
#               UL = fixef(glm_click_email_phish) + 1.96 * se_click_email_phish))
# #Odds ratio
# exp(tab_click_email_phish)
glm_click_phish <- glmer(click_action.f ~
(placement.f + activation.f + forced_attention.f)^2 #warning-related factors
+ warnings_seen #number of warnings seen before and during clicking on the link
+ benign_ctr #tendency to click on benign links
+ cyber_quiz_score + PE_score + brand_usage # phishing-related individual characteristics
+ gender.f + education.f + age + occupation.f #demographics
+ (1 | ref_id.f) + (1 | username.f) + (1 | adj_link_id.f), #random effect
data=data_phish_only,
# family="binomial")
family=binomial(link=logit),
control=glmerControl(optCtrl=list(maxfun=2e4)))
# control = glmerControl(optimizer ="Nelder_Mead"))
summary(glm_click_phish)
#Print correlation tables
print(glm_click_phish, correlation=TRUE)
#Get confidence intervals
se_click_phish <- sqrt(diag(vcov(glm_click_phish)))
# table of estimates with 95% CI
(tab_click_phish <- cbind(Est = fixef(glm_click_phish),
LL = fixef(glm_click_phish) - 1.96 * se_click_phish,
UL = fixef(glm_click_phish) + 1.96 * se_click_phish))
#Odds ratio
exp(tab_click_phish)
sum(data_phish_only$click_action.f)
sum(data_phish_only$click_action)
#Set working directory
# setwd("C:/Users/yzou15/Google Drive/UMSI/Research/REMS17-phishing/Data/Yixin scripts")
setwd("C:\\Workspace\\REMS2017\\data\\final_analysis\\yixin")
#Clean up the global environment
# rm(list=ls())
#Remove scientific notation
options(scipen=999, digits=4)
#Import the data
data_cleaned <- read.csv(file="data_adjusted.csv",header=TRUE,sep=",",
stringsAsFactors=FALSE,check.names = FALSE)
#str(data_cleaned)
#Recode certain categotical variables
#For gender, we code 0 (N/A) and non-binary as other
table(data_cleaned$DQ_Gender)
data_cleaned$DQ_Gender[data_cleaned$DQ_Gender=="0" | data_cleaned$DQ_Gender=="Non binary/third gender"] <- "Other"
data_cleaned$gender.f <- factor(data_cleaned$DQ_Gender,levels=c("Female","Male","Other"), exclude = "Other")
table(data_cleaned$gender.f)
#Show the distribution of education
# table(data_cleaned$DQ_Educ)
#Divide education into no bachelor's degree, bachelor's degree, and graduate degree
data_cleaned$DQ_Educ[data_cleaned$DQ_Educ=="0"] <- "Other"
data_cleaned$DQ_Educ[data_cleaned$DQ_Educ=="High school or equivalent (e.g., GED)" |
data_cleaned$DQ_Educ=="Some college but no degree"] <- "No Bachelor's degree"
data_cleaned$DQ_Educ[data_cleaned$DQ_Educ=="Associate's degree" |
data_cleaned$DQ_Educ=="Trade, technical, or vocational training" |
data_cleaned$DQ_Educ=="Bachelor's degree"] <- "Bachelor's degree"
data_cleaned$DQ_Educ[data_cleaned$DQ_Educ=="Professional degree (JD, MD etc.)" |
data_cleaned$DQ_Educ=="Doctoral's degree" |
data_cleaned$DQ_Educ=="Master's degree"] <- "Graduate degree"
data_cleaned$education.f <- factor(data_cleaned$DQ_Educ,
levels=c("No Bachelor's degree","Bachelor's degree","Graduate degree"), exclude = "Other")
# table(data_cleaned$education.f)
#Show basic statistics about age
library(pastecs)
stat.desc(data_cleaned$DQ_Age)
#Show the distribution of age
hist(as.numeric(data_cleaned$DQ_Age), breaks=10)
#Convert age to a numeric type variable
data_cleaned$age <- as.numeric(data_cleaned$DQ_Age)
#Convert ref_id to factor
#data_cleaned$ref_id.f <- factor(data_cleaned$ref_id)
#Show the distribution of occupation
# table(data_cleaned$DQ_Occ)
data_cleaned$DQ_Occ[data_cleaned$DQ_Occ == "Computers (Hardware, Desktop Software)"|
data_cleaned$DQ_Occ == "Engineering / Architecture" |
data_cleaned$DQ_Occ == "Internet"] <- "Technical occupations"
data_cleaned$DQ_Occ[data_cleaned$DQ_Occ != "Technical occupations"] <- "Non-technical occupations"
data_cleaned$occupation.f <- factor(data_cleaned$DQ_Occ,
levels=c("Technical occupations","Non-technical occupations"))
# table(data_cleaned$occupation.f)
#phishing-related variables
data_cleaned$p_email.f <- factor(data_cleaned$p_email)
# table(data_cleaned$p_email.f)
data_cleaned$p_link.f <- factor(data_cleaned$p_link)
# table(data_cleaned$p_link.f)
#condition group variables
data_cleaned$placement.f <- factor(data_cleaned$placement,
level=c("inmail","banner","browser","no warning"))
# table(data_cleaned$placement.f)
data_cleaned$activation.f <- factor(data_cleaned$activation,
level=c("on load","on click","no warning"))
# table(data_cleaned$activation.f)
data_cleaned$forced_attention[data_cleaned$forced_attention=="neither"] <- "no"
data_cleaned$forced_attention.f <- factor(data_cleaned$forced_attention,
level=c("no","yes","no warning"))
# table(data_cleaned$forced_attention.f)
data_cleaned$condition_group.f <- factor(data_cleaned$condition_group,
levels=c(1,2,3,4,5,6,0),
labels=c("on-load, no forced","on-load, forced",
"on-click, no forced","on-click, forced",
"banner","browser","no warning"))
# table(data_cleaned$condition_group.f)
#dependent variables: click and hover action, hover time
data_cleaned$email_p_link_click[data_cleaned$email_p_link_click == "True"] <- 1
data_cleaned$email_p_link_click[data_cleaned$email_p_link_click == "False"] <- 0
data_cleaned$email_p_link_hover[data_cleaned$email_p_link_hover == "True"] <- 1
data_cleaned$email_p_link_hover[data_cleaned$email_p_link_hover == "False"] <- 0
data_cleaned$click_email_action.f <- factor(data_cleaned$email_p_link_click,
levels=c(0:1),
labels=c("no","yes"))
data_cleaned$hover_email_action.f <- factor(data_cleaned$email_p_link_hover,
levels=c(0:1),
labels=c("no","yes"))
data_cleaned$warn_p_link_click[data_cleaned$warn_p_link_click == "True"] <- 1
data_cleaned$warn_p_link_click[data_cleaned$warn_p_link_click == "False"] <- 0
data_cleaned$warn_p_link_hover[data_cleaned$warn_p_link_hover == "True"] <- 1
data_cleaned$warn_p_link_hover[data_cleaned$warn_p_link_hover == "False"] <- 0
data_cleaned$click_warning_action.f <- factor(data_cleaned$warn_p_link_click,
levels=c(0:1),
labels=c("no","yes"))
data_cleaned$hover_warning_action.f <- factor(data_cleaned$warn_p_link_hover,
levels=c(0:1),
labels=c("no","yes"))
#dependent variables: click and hover action
# data_cleaned$click_action[data_cleaned$click_action == "True"] <- 1
# data_cleaned$click_action[data_cleaned$click_action == "False"] <- 0
# data_cleaned$hover_action[data_cleaned$hover_action == "True"] <- 1
# data_cleaned$hover_action[data_cleaned$hover_action == "False"] <- 0
# data_cleaned$click_action.f <- factor(data_cleaned$click_action, levels=c(0:1), labels=c("no","yes"))
# data_cleaned$hover_action.f <- factor(data_cleaned$hover_action, levels=c(0:1), labels=c("no","yes"))
# Try Factoring 0 and 1 (edit: does not work)
# data_cleaned$click_action.f <- factor(data_cleaned$click_action)
# data_cleaned$hover_action.f <- factor(data_cleaned$hover_action)
#Factor random effect variables
data_cleaned$ref_id.f <- factor(data_cleaned$ref_id)
data_cleaned$username.f <- factor(data_cleaned$username)
data_cleaned$adj_link_id.f <- factor(data_cleaned$adj_link_id)
#rename time series variable
colnames(data_cleaned)[which(names(data_cleaned) == "time_series")] <- "warnings_seen"
sum(data_phish_only$click_action)
#Only examine phish links and include non-phish ctr as additional variables in the model
library(dplyr)
data_phish_only <- data_cleaned %>%
filter(data_cleaned$p_link == "True")
sum(data_phish_only$click_action)
class(data_phish_only$click_action)
data_phish_only$click_action
#Set working directory
# setwd("C:/Users/yzou15/Google Drive/UMSI/Research/REMS17-phishing/Data/Yixin scripts")
setwd("C:\\Workspace\\REMS2017\\data\\final_analysis\\yixin")
#Clean up the global environment
# rm(list=ls())
#Remove scientific notation
options(scipen=999, digits=4)
#Import the data
data_cleaned <- read.csv(file="data_adjusted.csv",header=TRUE,sep=",",
stringsAsFactors=FALSE,check.names = FALSE)
#str(data_cleaned)
#Recode certain categotical variables
#For gender, we code 0 (N/A) and non-binary as other
table(data_cleaned$DQ_Gender)
data_cleaned$DQ_Gender[data_cleaned$DQ_Gender=="0" | data_cleaned$DQ_Gender=="Non binary/third gender"] <- "Other"
data_cleaned$gender.f <- factor(data_cleaned$DQ_Gender,levels=c("Female","Male","Other"), exclude = "Other")
table(data_cleaned$gender.f)
#Show the distribution of education
# table(data_cleaned$DQ_Educ)
#Divide education into no bachelor's degree, bachelor's degree, and graduate degree
data_cleaned$DQ_Educ[data_cleaned$DQ_Educ=="0"] <- "Other"
data_cleaned$DQ_Educ[data_cleaned$DQ_Educ=="High school or equivalent (e.g., GED)" |
data_cleaned$DQ_Educ=="Some college but no degree"] <- "No Bachelor's degree"
data_cleaned$DQ_Educ[data_cleaned$DQ_Educ=="Associate's degree" |
data_cleaned$DQ_Educ=="Trade, technical, or vocational training" |
data_cleaned$DQ_Educ=="Bachelor's degree"] <- "Bachelor's degree"
data_cleaned$DQ_Educ[data_cleaned$DQ_Educ=="Professional degree (JD, MD etc.)" |
data_cleaned$DQ_Educ=="Doctoral's degree" |
data_cleaned$DQ_Educ=="Master's degree"] <- "Graduate degree"
data_cleaned$education.f <- factor(data_cleaned$DQ_Educ,
levels=c("No Bachelor's degree","Bachelor's degree","Graduate degree"), exclude = "Other")
# table(data_cleaned$education.f)
#Show basic statistics about age
library(pastecs)
stat.desc(data_cleaned$DQ_Age)
#Show the distribution of age
hist(as.numeric(data_cleaned$DQ_Age), breaks=10)
#Convert age to a numeric type variable
data_cleaned$age <- as.numeric(data_cleaned$DQ_Age)
#Convert ref_id to factor
#data_cleaned$ref_id.f <- factor(data_cleaned$ref_id)
#Show the distribution of occupation
# table(data_cleaned$DQ_Occ)
data_cleaned$DQ_Occ[data_cleaned$DQ_Occ == "Computers (Hardware, Desktop Software)"|
data_cleaned$DQ_Occ == "Engineering / Architecture" |
data_cleaned$DQ_Occ == "Internet"] <- "Technical occupations"
data_cleaned$DQ_Occ[data_cleaned$DQ_Occ != "Technical occupations"] <- "Non-technical occupations"
data_cleaned$occupation.f <- factor(data_cleaned$DQ_Occ,
levels=c("Technical occupations","Non-technical occupations"))
# table(data_cleaned$occupation.f)
#phishing-related variables
data_cleaned$p_email.f <- factor(data_cleaned$p_email)
# table(data_cleaned$p_email.f)
data_cleaned$p_link.f <- factor(data_cleaned$p_link)
# table(data_cleaned$p_link.f)
#condition group variables
data_cleaned$placement.f <- factor(data_cleaned$placement,
level=c("inmail","banner","browser","no warning"))
# table(data_cleaned$placement.f)
data_cleaned$activation.f <- factor(data_cleaned$activation,
level=c("on load","on click","no warning"))
# table(data_cleaned$activation.f)
data_cleaned$forced_attention[data_cleaned$forced_attention=="neither"] <- "no"
data_cleaned$forced_attention.f <- factor(data_cleaned$forced_attention,
level=c("no","yes","no warning"))
# table(data_cleaned$forced_attention.f)
data_cleaned$condition_group.f <- factor(data_cleaned$condition_group,
levels=c(1,2,3,4,5,6,0),
labels=c("on-load, no forced","on-load, forced",
"on-click, no forced","on-click, forced",
"banner","browser","no warning"))
# table(data_cleaned$condition_group.f)
#dependent variables: click and hover action, hover time
data_cleaned$email_p_link_click[data_cleaned$email_p_link_click == "True"] <- 1
data_cleaned$email_p_link_click[data_cleaned$email_p_link_click == "False"] <- 0
data_cleaned$email_p_link_hover[data_cleaned$email_p_link_hover == "True"] <- 1
data_cleaned$email_p_link_hover[data_cleaned$email_p_link_hover == "False"] <- 0
data_cleaned$click_email_action.f <- factor(data_cleaned$email_p_link_click,
levels=c(0:1),
labels=c("no","yes"))
data_cleaned$hover_email_action.f <- factor(data_cleaned$email_p_link_hover,
levels=c(0:1),
labels=c("no","yes"))
data_cleaned$warn_p_link_click[data_cleaned$warn_p_link_click == "True"] <- 1
data_cleaned$warn_p_link_click[data_cleaned$warn_p_link_click == "False"] <- 0
data_cleaned$warn_p_link_hover[data_cleaned$warn_p_link_hover == "True"] <- 1
data_cleaned$warn_p_link_hover[data_cleaned$warn_p_link_hover == "False"] <- 0
data_cleaned$click_warning_action.f <- factor(data_cleaned$warn_p_link_click,
levels=c(0:1),
labels=c("no","yes"))
data_cleaned$hover_warning_action.f <- factor(data_cleaned$warn_p_link_hover,
levels=c(0:1),
labels=c("no","yes"))
#dependent variables: click and hover action
# data_cleaned$click_action[data_cleaned$click_action == "True"] <- 1
data_cleaned$click_action[data_cleaned$click_action == "False"] <- 0
data_cleaned$hover_action[data_cleaned$hover_action == "True"] <- 1
data_cleaned$hover_action[data_cleaned$hover_action == "False"] <- 0
# data_cleaned$click_action.f <- factor(data_cleaned$click_action, levels=c(0:1), labels=c("no","yes"))
# data_cleaned$hover_action.f <- factor(data_cleaned$hover_action, levels=c(0:1), labels=c("no","yes"))
# Try Factoring 0 and 1 (edit: does not work)
# data_cleaned$click_action.f <- factor(data_cleaned$click_action)
# data_cleaned$hover_action.f <- factor(data_cleaned$hover_action)
#Factor random effect variables
data_cleaned$ref_id.f <- factor(data_cleaned$ref_id)
data_cleaned$username.f <- factor(data_cleaned$username)
data_cleaned$adj_link_id.f <- factor(data_cleaned$adj_link_id)
#rename time series variable
colnames(data_cleaned)[which(names(data_cleaned) == "time_series")] <- "warnings_seen"
sum(data_cleaned$click_action)
unique(data_cleaned$click_action)
#Set working directory
# setwd("C:/Users/yzou15/Google Drive/UMSI/Research/REMS17-phishing/Data/Yixin scripts")
setwd("C:\\Workspace\\REMS2017\\data\\final_analysis\\yixin")
#Clean up the global environment
# rm(list=ls())
#Remove scientific notation
options(scipen=999, digits=4)
#Import the data
data_cleaned <- read.csv(file="data_adjusted.csv",header=TRUE,sep=",",
stringsAsFactors=FALSE,check.names = FALSE)
#str(data_cleaned)
#Recode certain categotical variables
#For gender, we code 0 (N/A) and non-binary as other
table(data_cleaned$DQ_Gender)
data_cleaned$DQ_Gender[data_cleaned$DQ_Gender=="0" | data_cleaned$DQ_Gender=="Non binary/third gender"] <- "Other"
data_cleaned$gender.f <- factor(data_cleaned$DQ_Gender,levels=c("Female","Male","Other"), exclude = "Other")
table(data_cleaned$gender.f)
#Show the distribution of education
# table(data_cleaned$DQ_Educ)
#Divide education into no bachelor's degree, bachelor's degree, and graduate degree
data_cleaned$DQ_Educ[data_cleaned$DQ_Educ=="0"] <- "Other"
data_cleaned$DQ_Educ[data_cleaned$DQ_Educ=="High school or equivalent (e.g., GED)" |
data_cleaned$DQ_Educ=="Some college but no degree"] <- "No Bachelor's degree"
data_cleaned$DQ_Educ[data_cleaned$DQ_Educ=="Associate's degree" |
data_cleaned$DQ_Educ=="Trade, technical, or vocational training" |
data_cleaned$DQ_Educ=="Bachelor's degree"] <- "Bachelor's degree"
data_cleaned$DQ_Educ[data_cleaned$DQ_Educ=="Professional degree (JD, MD etc.)" |
data_cleaned$DQ_Educ=="Doctoral's degree" |
data_cleaned$DQ_Educ=="Master's degree"] <- "Graduate degree"
data_cleaned$education.f <- factor(data_cleaned$DQ_Educ,
levels=c("No Bachelor's degree","Bachelor's degree","Graduate degree"), exclude = "Other")
# table(data_cleaned$education.f)
#Show basic statistics about age
library(pastecs)
stat.desc(data_cleaned$DQ_Age)
#Show the distribution of age
hist(as.numeric(data_cleaned$DQ_Age), breaks=10)
#Convert age to a numeric type variable
data_cleaned$age <- as.numeric(data_cleaned$DQ_Age)
#Convert ref_id to factor
#data_cleaned$ref_id.f <- factor(data_cleaned$ref_id)
#Show the distribution of occupation
# table(data_cleaned$DQ_Occ)
data_cleaned$DQ_Occ[data_cleaned$DQ_Occ == "Computers (Hardware, Desktop Software)"|
data_cleaned$DQ_Occ == "Engineering / Architecture" |
data_cleaned$DQ_Occ == "Internet"] <- "Technical occupations"
data_cleaned$DQ_Occ[data_cleaned$DQ_Occ != "Technical occupations"] <- "Non-technical occupations"
data_cleaned$occupation.f <- factor(data_cleaned$DQ_Occ,
levels=c("Technical occupations","Non-technical occupations"))
# table(data_cleaned$occupation.f)
#phishing-related variables
data_cleaned$p_email.f <- factor(data_cleaned$p_email)
# table(data_cleaned$p_email.f)
data_cleaned$p_link.f <- factor(data_cleaned$p_link)
# table(data_cleaned$p_link.f)
#condition group variables
data_cleaned$placement.f <- factor(data_cleaned$placement,
level=c("inmail","banner","browser","no warning"))
# table(data_cleaned$placement.f)
data_cleaned$activation.f <- factor(data_cleaned$activation,
level=c("on load","on click","no warning"))
# table(data_cleaned$activation.f)
data_cleaned$forced_attention[data_cleaned$forced_attention=="neither"] <- "no"
data_cleaned$forced_attention.f <- factor(data_cleaned$forced_attention,
level=c("no","yes","no warning"))
# table(data_cleaned$forced_attention.f)
data_cleaned$condition_group.f <- factor(data_cleaned$condition_group,
levels=c(1,2,3,4,5,6,0),
labels=c("on-load, no forced","on-load, forced",
"on-click, no forced","on-click, forced",
"banner","browser","no warning"))
# table(data_cleaned$condition_group.f)
#dependent variables: click and hover action, hover time
data_cleaned$email_p_link_click[data_cleaned$email_p_link_click == "True"] <- 1
data_cleaned$email_p_link_click[data_cleaned$email_p_link_click == "False"] <- 0
data_cleaned$email_p_link_hover[data_cleaned$email_p_link_hover == "True"] <- 1
data_cleaned$email_p_link_hover[data_cleaned$email_p_link_hover == "False"] <- 0
data_cleaned$click_email_action.f <- factor(data_cleaned$email_p_link_click,
levels=c(0:1),
labels=c("no","yes"))
data_cleaned$hover_email_action.f <- factor(data_cleaned$email_p_link_hover,
levels=c(0:1),
labels=c("no","yes"))
data_cleaned$warn_p_link_click[data_cleaned$warn_p_link_click == "True"] <- 1
data_cleaned$warn_p_link_click[data_cleaned$warn_p_link_click == "False"] <- 0
data_cleaned$warn_p_link_hover[data_cleaned$warn_p_link_hover == "True"] <- 1
data_cleaned$warn_p_link_hover[data_cleaned$warn_p_link_hover == "False"] <- 0
data_cleaned$click_warning_action.f <- factor(data_cleaned$warn_p_link_click,
levels=c(0:1),
labels=c("no","yes"))
data_cleaned$hover_warning_action.f <- factor(data_cleaned$warn_p_link_hover,
levels=c(0:1),
labels=c("no","yes"))
#dependent variables: click and hover action
data_cleaned$click_action[data_cleaned$click_action == "True"] <- 1
data_cleaned$click_action[data_cleaned$click_action == "False"] <- 0
data_cleaned$hover_action[data_cleaned$hover_action == "True"] <- 1
data_cleaned$hover_action[data_cleaned$hover_action == "False"] <- 0
# data_cleaned$click_action.f <- factor(data_cleaned$click_action, levels=c(0:1), labels=c("no","yes"))
# data_cleaned$hover_action.f <- factor(data_cleaned$hover_action, levels=c(0:1), labels=c("no","yes"))
# Try Factoring 0 and 1 (edit: does not work)
# data_cleaned$click_action.f <- factor(data_cleaned$click_action)
# data_cleaned$hover_action.f <- factor(data_cleaned$hover_action)
#Factor random effect variables
data_cleaned$ref_id.f <- factor(data_cleaned$ref_id)
data_cleaned$username.f <- factor(data_cleaned$username)
data_cleaned$adj_link_id.f <- factor(data_cleaned$adj_link_id)
#rename time series variable
colnames(data_cleaned)[which(names(data_cleaned) == "time_series")] <- "warnings_seen"
#Only examine phish links and include non-phish ctr as additional variables in the model
library(dplyr)
data_phish_only <- data_cleaned %>%
filter(data_cleaned$p_link == "True")
sum(data_phish_only$click_action)
data_phish_only$click_action
transform(data_phish_only$click_action, click_action = as.numeric(click_action))
transform(data_phish_only, click_action = as.numeric(click_action))
data_phish_only = transform(data_phish_only, click_action = as.numeric(click_action))
sum(data_phish_only$click_action)
knitr::opts_chunk$set(echo = TRUE)
#Set working directory
# setwd("C:/Users/yzou15/Google Drive/UMSI/Research/REMS17-phishing/Data/Yixin scripts")
# setwd("C:\\Workspace\\REMS2017\\data\\final_analysis\\yixin")
# setwd("C:\\Users\\sloth\\Desktop\\Yixin\\phishing warning\\final_data")
setwd("C:/workspace/rems2017/spilab-repo/phishing-experiment/analysis")
#Clean up the global environment
rm(list=ls())
#Remove scientific notation
options(scipen=999, digits=4)
#Import the data
data_cleaned <- read.csv(file="data_adjusted_edited.csv",header=TRUE,sep=",",
stringsAsFactors=FALSE,check.names = FALSE)
